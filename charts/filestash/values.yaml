# Default values for filestash.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/machines/filestash
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: "filestash"
fullnameOverride: ""

# Environment variables passed to filestash
env: []
  # - name: TZ
  #   value: UTC

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

documentServer:
  enabled: false
  nameOverride: "document-server"
  fullnameOverride: ""
  image:
    repository: onlyoffice/documentserver
    pullPolicy: IfNotPresent
    tag: ""
  replicaCount: 1
  # Environment variables passed to document server
  env: []
    # - name: TZ
    #   value: UTC

  service:
    type: ClusterIP
    port: 80

service:
  type: ClusterIP
  port: 8334

ingress:
  enabled: false
  className: ""
  # Set "isTraefik: true" if Traefik is the ingress provider. When true, a middleware
  # is created that adds an "X-Forwarded-Proto: https" header, and an annotation is
  # added to the ingress to attach this middleware. Document server integration with
  # filestash does not work correctly with traefik if this is not done.
  isTraefik: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: 
    - secretName: chart-example-tls
      hosts:
        - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

persistence:
  filestashState:
    enabled: false
    # Note that ReadWriteOnce will not work with replicaCount > 1 or autoscaling
    accessMode: ReadWriteOnce
    # annotations:
    #  "helm.sh/resource-policy": keep
    # storageClass: "default"
    storageSize: 100Mi

tolerations: []

affinity: {}
